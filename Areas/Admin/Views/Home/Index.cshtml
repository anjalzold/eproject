@model eproject.Areas.Admin.Models.DashboardViewModel
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Custom";
}

<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Dashboard</h1>
    </div>

    <!-- Statistics Cards -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-4 g-4 mb-4">
        <div class="col">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <h5 class="card-title">Total Anime</h5>
                    <p class="card-text display-4">@Model.TotalAnime</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <h5 class="card-title">Total Users</h5>
                    <p class="card-text display-4">@Model.TotalUsers</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <h5 class="card-title">Recently Added</h5>
                    <p class="card-text display-4">@Model.RecentlyAddedAnime</p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card stat-card h-100">
                <div class="card-body">
                    <h5 class="card-title">Active Users</h5>
                    <p class="card-text display-4">@Model.ActiveUsers</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts and Widgets -->
    <div class="row">
        <div class="col-12 col-lg-12">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Anime Popularity</h5>
                    <canvas id="animePopularityChart"></canvas>
                </div>
            </div>
        </div>
        <!-- <div class="col-12 col-lg-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">User Activity</h5>
                    <ul class="list-group list-group-flush">
                        @foreach (var update in Model.RecentUpdates.Take(4))
                        {
                            <li class="list-group-item bg-transparent text-light">@update.Title was @update.UpdateType</li>
                        }
                    </ul>
                </div>
            </div>
        </div> -->
    </div>

    <!-- Recent Updates Section -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Recent Updates</h5>
                    <table class="table table-dark table-hover">
                        <thead>
                            <tr>
                                <th>Anime</th>
                                <th>Update Type</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var update in Model.RecentUpdates)
                            {
                                <tr>
                                    <td>@update.Title</td>
                                    <td>@update.UpdateType</td>
                                    <td>@update.Date.ToString("yyyy-MM-dd")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            try {
                var ctx = document.getElementById('animePopularityChart');
                if (!ctx) {
                    console.error('Could not find the chart canvas element');
                    return;
                }

                var chartData = {
                    labels: [@Html.Raw(string.Join(",", Model.AnimePopularity.Select(a => $"'{a.Title}'")))],
                    datasets: [{
                        label: 'Popularity',
                        data: [@string.Join(",", Model.AnimePopularity.Select(a => Math.Round((double)a.Popularity, 2)))],
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                };

                var chart = new Chart(ctx, {
                    type: 'bar',
                    data: chartData,
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error creating chart:', error);
            }
        });
    </script>
}